<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{{title}}</title>
  <meta name="description" content="{{description}}">
  <style>
    .loader { 
      opacity: 0;
      transition: opacity 0.5s;
      display: flex;
      height: 100vh;
      position: absolute;
      top: 0;
      width: 100vw;
      z-index: 1;
      background-image: linear-gradient(136deg, #27a0b0 0%, #5477d4 52%, #a85dff 100%);
    }
    .loading .loader {
      opacity: 1;
    }
    .vscode-logo {
      margin: auto;
      fill: #fff;
    }
  </style>
  <link rel="stylesheet" href="styles/styles.css">
</head>
<body class="loading">
  {{{body}}}

  <div class="loader">
    <svg width="160" height="160" viewBox="0 0 160 160" class="vscode-logo">
      <g>
        <path class="p1" d="M 3 115 L 3 115 L 16 120 L 16 120 L 3 115 Z"></path>
        <path class="p2" d="M 112 6 L 148 21 L 148 21 L 112 6 L 112 6 Z"></path>
        <path class="p3" d="M 148 135 L 112 152 L 112 152 L 148 135 L 148 135 Z"></path>
      </g>
    </svg>    
  </div>

  <script src="scripts/anime.min.js"></script>
  <script>
    (function(document) {
      const timeline = anime.timeline({
        loop: true,
        duration: 450,
        easing: 'easeInOutQuart'
      });

      timeline
        .add({ targets: '.p1', d: { value: 'M 3 115 L 112 6 L 148 21 L 16 120 L 3 115 Z', delay: 400 }})
        .add({ targets: '.p2', d: { value: 'M 112 6 L 148 21 L 150 136 L 112 152 L 112 6 Z' }})
        .add({ targets: '.p3', d: { value: 'M 148 135 L 112 152 L 3 43 L 17 37 L 148 135 Z' }})
        .add({ targets: '.p3', d: { value: 'M 148 135 L 112 152 L 112 152 L 148 135 L 148 135 Z', delay: 400 }})
        .add({ targets: '.p2', d: { value: 'M 112 6 L 148 21 L 148 21 L 112 6 L 112 6 Z' }})
        .add({ targets: '.p1', d: { value: 'M 3 115 L 3 115 L 16 120 L 16 120 L 3 115 Z' }});
      
      const loader = document.querySelector('.loader');
      const destroyLoader = () => {
        loader.removeEventListener('transitionend', destroyLoader);
        document.body.removeChild(loader);
      };

      setTimeout(() => {
        document.body.classList.remove('loading');
        loader.addEventListener('transitionend', destroyLoader);
      }, 3600);
    }(document));
  </script>
  <script src="scripts/app.js"></script>
</body>
</html>